name: Deployment

on:
  push:
    branches:
      - main

jobs:
  checks:
    uses: ./.github/workflows/ci.yaml

  version-and-publish:
    # This job handles versioning and publishing
    name: Version & Publish
    runs-on: ubuntu-latest
    needs: [checks]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    outputs:
      published: ${{ steps.changesets.outputs.published }}
      newVersionTag: ${{ steps.changesets.outputs.newVersionTag }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-ci

      - name: Create Version PR or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This command will run 'pnpm changeset version' and create a PR
          version: 'pnpm changeset version'
          # This command will run 'pnpm publish' if a new version was released
          publish: 'pnpm publish --no-git-checks'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [version-and-publish]
    # It only runs if the previous job actually published a new version
    if: needs.version-and-publish.outputs.published == 'true'

    steps:
      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          # This uses the tag name generated by the Changesets action
          tag: ${{ needs.version-and-publish.outputs.newVersionTag }}
          # This will automatically find the relevant changelog entries
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
